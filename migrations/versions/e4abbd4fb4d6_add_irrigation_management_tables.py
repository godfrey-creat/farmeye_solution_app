"""Add irrigation management tables

Revision ID: e4abbd4fb4d6
Revises: f59e8e6840e4
Create Date: 2025-05-14 12:03:11.987002

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e4abbd4fb4d6'
down_revision = 'f59e8e6840e4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('irrigation_zone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('crop_type', sa.String(length=50), nullable=True),
    sa.Column('target_moisture', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('farm_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['farm_id'], ['farms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('irrigation_alert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['zone_id'], ['irrigation_zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('irrigation_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('water_amount', sa.Float(), nullable=True),
    sa.Column('recurrence', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['zone_id'], ['irrigation_zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('irrigation_sensor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('sensor_type', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('last_reading', sa.Float(), nullable=True),
    sa.Column('last_reading_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['zone_id'], ['irrigation_zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('water_usage_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('water_amount', sa.Float(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('efficiency_rating', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['zone_id'], ['irrigation_zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('water_usage_log')
    op.drop_table('irrigation_sensor')
    op.drop_table('irrigation_schedule')
    op.drop_table('irrigation_alert')
    op.drop_table('irrigation_zone')
    # ### end Alembic commands ###
